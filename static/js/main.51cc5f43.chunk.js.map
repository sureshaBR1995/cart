{"version":3,"sources":["util.js","components/Products.js","components/Filter.js","components/Basket.js","App.js","serviceWorker.js","index.js"],"names":["num","Number","toFixed","toLocaleString","Products","productItems","this","props","products","map","product","className","key","id","href","onClick","e","handleAddToCart","src","alt","title","util","price","Component","count","value","sort","onChange","handleSortChange","size","handleSizeChange","Basket","cartItems","length","style","marginLeft","item","float","handleRemoveFromCart","reduce","a","c","alert","App","setState","state","filter","localStorage","setItem","JSON","stringify","productAlreadyInCart","forEach","cp","push","listProducts","b","filteredProducts","availableSizes","indexOf","toUpperCase","target","getItem","parse","fetch","then","res","json","catch","err","data","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.51cc5f43.chunk.js","sourcesContent":["export default {\n    formatCurrency: function (num) {\n        return 'Rupees ' + Number(num.toFixed(1)).toLocaleString() + ' ';\n    }\n}","import React, { Component } from 'react';\nimport util from '../util'\nexport default class Products extends Component {\n\n    render() {\n        const productItems = this.props.products.map(product => (\n            <div className=\"col-md-4\" key={product.id}>\n                <div className=\"thumbnail text-center\">\n                    <a href={`#${product.id}`}onClick={(e)=>this.props.handleAddToCart(e, product)}>\n                        <img src={`products/ghee.jpg`} alt={product.title} />\n                        <p>{product.title}</p>                        \n                    </a>\n                    <b>{util.formatCurrency(product.price)}</b>\n                    <button className=\"btn btn-success\" onClick={(e)=>this.props.handleAddToCart(e, product)}>Add cart</button>\n                </div>\n            </div>\n        ));\n\n        return (\n            <div className=\"row\">\n                {productItems}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nexport default class Products extends Component {\n\n    render() {\n\n\n        return (\n            <div className=\"row\">\n                <div className=\"col-md-4\">\n                    {`${this.props.count} products found.`}\n                </div>\n                <div className=\"col-md-4\">\n                    <label>Order by\n               <select className=\"form-control\" value={this.props.sort} onChange={this.props.handleSortChange}>\n                            <option value=\"\">Select</option>\n                            <option value=\"lowestprice\">Low to high</option>\n                            <option value=\"highestprice\">High to low</option>\n                        </select>\n                    </label>\n                </div>\n                <div className=\"col-md-4\">\n                    <label > Filter Size\n               <select className=\"form-control\" value={this.props.size} onChange={this.props.handleSizeChange}>\n                            <option value=\"\">ALL</option>\n                            <option value=\"x\">XS</option>\n                            <option value=\"s\">S</option>\n                            <option value=\"m\">M</option>\n                            <option value=\"l\">L</option>\n                            <option value=\"xl\">XL</option>\n                            <option value=\"xxl\">XXL</option>\n                        </select>\n                    </label>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport util from '../util'\nexport default class Basket extends Component {\n    render() {\n        const { cartItems } = this.props;\n\n        return (\n            <div className=\"alert alert-info\">\n                {cartItems.length === 0\n                    ? \"Basket is empty\" :\n                    <div>You have {cartItems.length} items in the basket. <hr /></div>\n                }\n                {cartItems.length > 0 &&\n                    <div>\n                        <ul style={{ marginLeft: -25 }}>\n                            {cartItems.map(item => (\n                                <li key={item.id}>\n                                    <b>{item.title}</b>\n                                    <button style={{ float: 'right' }} className=\"btn btn-danger btn-xs\"\n                                        onClick={(e) => this.props.handleRemoveFromCart(e, item)}>X</button>\n                                    <br />\n                                    {item.count} X {util.formatCurrency(item.price)}\n                                </li>))\n                            }\n                        </ul>\n\n                        <b>Sum: {util.formatCurrency(cartItems.reduce((a, c) => (a + c.price * c.count), 0))}\n                        </b>\n                        <button onClick={() => alert('I need to Implement Myself:From suresh.')} className=\"btn btn-primary\">BILL</button>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport Products from \"./components/Products\";\nimport Filter from \"./components/Filter\";\nimport Basket from \"./components/Basket\";\n\nimport \"./App.css\";\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      size: \"\",\n      sort: \"\",\n      cartItems: [],\n      products: [],\n      filteredProducts: []\n    };\n  }\n  componentWillMount() {\n    if (localStorage.getItem(\"cartItems\")) {\n      this.setState({\n        cartItems: JSON.parse(localStorage.getItem(\"cartItems\"))\n      });\n    }\n\n    fetch(\"https://myfelight.firebaseapp.com/shriproducts.json\")\n      .then(res => res.json())\n      .catch(err =>\n        fetch(\"db.json\")\n          .then(res => res.json())\n          .then(data => data.products)\n      )\n      .then(data => {\n        this.setState({ products: data });\n        this.listProducts();\n      });\n  }\n\n  handleRemoveFromCart = (e, product) => {\n    this.setState(state => {\n      const cartItems = state.cartItems.filter(a => a.id !== product.id);\n      localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n      return { cartItems: cartItems };\n    });\n  };\n\n  handleAddToCart = (e, product) => {\n    this.setState(state => {\n      const cartItems = state.cartItems;\n      let productAlreadyInCart = false;\n\n      cartItems.forEach(cp => {\n        if (cp.id === product.id) {\n          cp.count += 1;\n          productAlreadyInCart = true;\n        }\n      });\n\n      if (!productAlreadyInCart) {\n        cartItems.push({ ...product, count: 1 });\n      }\n      localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n      return { cartItems: cartItems };\n    });\n  };\n\n  listProducts = () => {\n    this.setState(state => {\n      if (state.sort !== \"\") {\n        state.products.sort((a, b) =>\n          state.sort === \"lowestprice\"\n            ? a.price > b.price\n              ? 1\n              : -1\n            : a.price < b.price\n            ? 1\n            : -1\n        );\n      } else {\n        state.products.sort((a, b) => (a.id > b.id ? 1 : -1));\n      }\n      if (state.size !== \"\") {\n        return {\n          filteredProducts: state.products.filter(\n            a => a.availableSizes.indexOf(state.size.toUpperCase()) >= 0\n          )\n        };\n      }\n      return { filteredProducts: state.products };\n    });\n  };\n  handleSortChange = e => {\n    this.setState({ sort: e.target.value });\n    this.listProducts();\n  };\n  handleSizeChange = e => {\n    this.setState({ size: e.target.value });\n    this.listProducts();\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Cart Project By Suresh</h1>\n        <hr />\n        <div className=\"row\">\n          <div className=\"col-md-9\">\n            <Filter\n              count={this.state.filteredProducts.length}\n              handleSortChange={this.handleSortChange}\n              handleSizeChange={this.handleSizeChange}\n            />\n            <hr />\n            <Products\n              products={this.state.filteredProducts}\n              handleAddToCart={this.handleAddToCart}\n            />\n          </div>\n          <div className=\"col-md-3\">\n            <Basket\n              cartItems={this.state.cartItems}\n              handleRemoveFromCart={this.handleRemoveFromCart}\n            />\n       \n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}